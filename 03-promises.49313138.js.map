{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAA,MAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAYF,SAASC,cAAc,SACnCE,EAASH,SAASC,cAAc,WDCtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,IACLH,EACKI,QAAQC,QACb,qBAAqBP,QAAeC,OACpCO,MAAKC,IACLC,EAAAlB,GAASmB,OAAOC,QAAQH,GACxBI,QAAQC,IAAIL,EAAK,IAIZH,QAAQS,OAAO,oBAAoBf,QAAeC,OAAWe,OAClEC,IACEP,EAAAlB,GAASmB,OAAOO,QAAQD,GACxBJ,QAAQC,IAAIG,EAAM,KAKvBhB,E,CCnBON,SAASC,cAAc,uBDsB/BuB,iBAAiB,SAASC,IAC5BA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKxB,EAAOyB,MAAOD,IACjCvB,EAAcuB,EAAGE,OAAO9B,EAAW6B,QAAUD,EAAI,GAAKzB,EAAU0B,MAAM","sources":["src/js/03-promises.js","src/js/myVariables.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { firstDelay, delayStep, amount, Btn } from './myVariables';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      return Promise.resolve(\n        `Fulfilled promise ${position} in ${delay}ms`\n      ).then(text => {\n        Notiflix.Notify.success(text);\n        console.log(text);\n      });\n      /// Fulfill\n    } else {\n      return Promise.reject(`Rejected promise ${position} in ${delay}ms`).catch(\n        error => {\n          Notiflix.Notify.failure(error);\n          console.log(error);\n        }\n      );\n      /// Reject\n    }\n  }, delay);\n}\n\nBtn.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, Number(firstDelay.value) + (i - 1) * delayStep.value);\n  }\n});","const firstDelay = document.querySelector('#delay');\nconst delayStep = document.querySelector('#step');\nconst amount = document.querySelector('#amount');\n\nconst Btn = document.querySelector('button[data-action]');\nexport { firstDelay, delayStep, amount, Btn };"],"names":["$7Y9D8","parcelRequire","$38d0ce8d8bcb0495$export$8af06a2d8f6ceeb9","document","querySelector","$38d0ce8d8bcb0495$export$ee4164ffc1558cbd","$38d0ce8d8bcb0495$export$802cfe72001a1ee","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Promise","resolve","then","text","$parcel$interopDefault","Notify","success","console","log","reject","catch","error","failure","addEventListener","e","preventDefault","i","value","Number"],"version":3,"file":"03-promises.49313138.js.map"}